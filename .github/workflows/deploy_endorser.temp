name: Deploy Endorser
on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Target (github) environment for deployment: development, test, production, tools'
        required: true
        default: 'tools'
      ref:
        description: 'The branch, tag or SHA to checkout'
        required: true
        default: 'develop'
      instance_name:
        description: 'Instance name'
        required: true
        default: 'endorser'

jobs:

  build_endorser:
    name: 'Build Endorser API'
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'bcgov'
    steps:      
      - uses: actions/checkout@v2    
        with:
          ref: ${{ github.event.inputs.ref }}    

      - name: Build service
        uses: ./.github/actions/build_service
        id: builder
        with:
          context: './services/endorser'
          image_name: ${{ github.repository_owner}}/endorser-api
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}
      image_version: ${{ steps.builder.outputs.image_version }}
      buildtime: ${{ steps.builder.outputs.buildtime }}



  deploy:
    name: Deploy Endorser
    environment: ${{ github.event.inputs.deploy_env }}
    runs-on: ubuntu-20.04
    needs: 
      - build_endorser
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) && (github.repository_owner == 'bcgov') }}
    
    steps:  
      - uses: actions/checkout@v2  
        with:
          ref: ${{ github.event.inputs.ref }}    

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Run Endorser PR Helm
        run: |
          yq eval '.global.fullnameOverride = "${{ github.event.inputs.instance_name }}"' -i ./charts/endorser/values.yaml
          yq eval '.postgresql.fullnameOverride = "${{ github.event.inputs.instance_name }}"' -i ./charts/endorser/values.yaml
          yq eval '.endorser_api.image.tag = "${{ needs.build_endorser.outputs.image_tag }}"' -i ./charts/endorser/values-${{ github.event.inputs.deploy_env }}.yaml
          yq eval '.endorser_api.image.version = "${{ needs.build_endorser.outputs.image_version }}"' -i ./charts/endorser/values-${{ github.event.inputs.deploy_env }}.yaml
          yq eval '.endorser_api.image.buildtime = "${{ needs.build_endorser.outputs.buildtime }}"' -i ./charts/endorser/values-${{ github.event.inputs.deploy_env }}.yaml
          helm upgrade -f ./charts/endorser/values.yaml -f ./charts/endorser/values-${{ github.event.inputs.deploy_env }}.yaml "${{ github.event.inputs.instance_name }}" ./charts/endorser --install --wait

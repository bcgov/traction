name: Run Integration Test
on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Target (github) environment for deployment: development, test, production, tools'
        required: true
        default: 'test'
      ref:
        description: 'The branch, tag or SHA to checkout'
        required: true
        default: 'develop'
      instance_name:
        description: 'Instance name'
        required: true
        default: 'integtest-traction'

jobs:
  build_traction:
    name: 'Build Traction API'
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'bcgov'
    steps:      
      - uses: actions/checkout@v2    
        with:
          ref: ${{ github.event.inputs.ref }}    

      - name: Build service
        uses: ./.github/actions/build_service
        id: builder
        with:
          context: './services/traction'
          image_name: ${{ github.repository_owner}}/traction-api
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}
      image_version: ${{ steps.builder.outputs.image_version }}
      buildtime: ${{ steps.builder.outputs.buildtime }}

  deploy:
    name: Deploy Traction
    environment: ${{ github.event.inputs.deploy_env }}
    runs-on: ubuntu-20.04
    needs: 
      - build_traction
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) && (github.repository_owner == 'bcgov') }}
    
    steps:  
      - uses: actions/checkout@v2  
        with:
          ref: ${{ github.event.inputs.ref }}    

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Run Traction API Helm
        run: |
          yq eval '.global.fullnameOverride = "${{ github.event.inputs.instance_name }}"' -i ./charts/traction/values.yaml
          yq eval '.postgresql.fullnameOverride = "${{ github.event.inputs.instance_name }}"' -i ./charts/traction/values.yaml
          yq eval '.traction_api.image.tag = "${{ needs.build_traction.outputs.image_tag }}"' -i ./charts/traction/values-${{ github.event.inputs.deploy_env }}.yaml
          yq eval '.traction_api.image.version = "${{ needs.build_traction.outputs.image_version }}"' -i ./charts/traction/values-${{ github.event.inputs.deploy_env }}.yaml
          yq eval '.traction_api.image.buildtime = "${{ needs.build_traction.outputs.buildtime }}"' -i ./charts/traction/values-${{ github.event.inputs.deploy_env }}.yaml
          helm upgrade -f ./charts/traction/values.yaml -f ./charts/traction/values-${{ github.event.inputs.deploy_env }}.yaml "${{ github.event.inputs.instance_name }}" ./charts/traction --install --wait

  test:
    name: Run integration tests
    environment: ${{ github.event.inputs.deploy_env }}
    runs-on: ubuntu-20.04
    needs: 
      - deploy
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) && (github.repository_owner == 'bcgov') }}
    steps:  
      - uses: actions/checkout@v2  
        with:
          ref: ${{ github.event.inputs.ref }}    

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Run tests in pod
        continue-on-error: true 
        run: |
          API_POD=$(oc get pods -o name --selector app.kubernetes.io/instance=${{ github.event.inputs.instance_name }},app.kubernetes.io/name=${{ github.event.inputs.instance_name }}-api)
          kubectl exec $API_POD -- pytest -p no:cacheprovider --asyncio-mode=strict -m integtest --discord-webhook=${{ secrets.PYTEST_DISCORD_WEBHOOK }} --discord-attach-file
          
      - name: Uninstall via Helm
        continue-on-error: true 
        run: |
          helm uninstall "${{ github.event.inputs.instance_name }}"
      
      - name: Remove Openshift Objects 
        continue-on-error: true
        run: |
          oc delete secret,pvc --selector "app.kubernetes.io/instance"="${{ github.event.inputs.instance_name }}"          


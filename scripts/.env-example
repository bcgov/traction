# ------------------------------------------------------------
# Business Partner Agent
# ------------------------------------------------------------

# Specifies the label for this agent. This label is publicized (self-attested) to other agents as part of forming a connection
VERIFIER_SERVICE_NAME="Business Partner Agent 2"

# How the BPA is seen from the outside world, either: ip address or dns name
# The hostname will also be registered as part of the profile endpoint on the ledger
VERIFIER_SERVICE_HOST=localhost
VERIFIER_SERVICE_PORT=5101
HOLDER_SERVICE_PORT=5100

VERIFIER_SERVICE_WEBHOOK_URL=http://bpa1:8080/log
HOLDER_SERVICE_WEBHOOK_URL=http://bpa2:8090/log



# ------------------------------------------------------------
# ACA-PY
# ------------------------------------------------------------

# Run in read only mode, requires BPA_WEB_MODE to be true.
#ACAPY_READ_ONLY_MODE=--read-only-ledger

ACAPY_GENESIS_URL=http://test.bcovrin.vonx.io/genesis

# To support revocation set the 2 URLs of an existing tails server
ACAPY_TAILS_BASE_URL=--tails-server-base-url https://tails-dev.vonx.io
ACAPY_TAILS_UPLOAD_URL=--tails-server-upload-url https://tails-dev.vonx.io

#
# Identity
#

# Enter wallet seed here:
#ACAPY_SEED=YjieiZiyoHaMza3sxXmgBYjBQ7L1er62
#ACAPY_SEED2=YjieiZiyoHaMza3sxXmgBYjBQ7L1er61
#
# Build
#

# Build ACA-Py instead of using a published image. Requires usage of docker-compose.custom-acapy.yml
# Example here is using the current master
ACAPY_BUILD_CONTEXT=https://github.com/hyperledger/aries-cloudagent-python.git
ACAPY_BUILD_DOCKERFILE_PATH=docker/Dockerfile.run

#
# Security
#

# Protect all admin endpoints with the provided API key
# Development setup (do not use in production!)
ACAPY_ADMIN_CONFIG=--admin-insecure-mode
# Production setup (change the key to a generated secret one)
#ACAPY_ADMIN_URL_API_KEY=change-me
#ACAPY_ADMIN_CONFIG=--admin-api-key ${ACAPY_ADMIN_URL_API_KEY}

#
# Connectivity
#

# Exposed service ports
ACAPY_HTTP_PORT=8030
ACAPY_ADMIN_PORT=8031
# Public endpoint URL that is registered on the ledger
ACAPY_ENDPOINT=http://localhost:8030

ACAPY2_HTTP_PORT=8040
ACAPY2_ADMIN_PORT=8041
ACAPY2_ENDPOINT=http://localhost:8040

#
# Wallet Storage
#

ACAPY_WALLET_TYPE=postgres_storage
ACAPY_WALLET_DATABASE=traction-wallet
ACAPY_WALLET_ENCRYPTION_KEY=key

# ------------------------------------------------------------
# Postgres Storage
# ------------------------------------------------------------

POSTGRESQL_HOST=traction-db
POSTGRESQL_PORT=5432
POSTGRESQL_USER=walletuser
POSTGRESQL_PASSWORD=walletpassword

# ---------------------
# Service DB Connection Info
# ---------------------

##traction
TRACTION_PSQL_USER=tractionuser
TRACTION_PSQL_PASS=

## holder
HOLDER_PSQL_DB=traction
HOLDER_PSQL_USER=holderuser
HOLDER_PSQL_PASS=holderPass

## verifier
VERIFIER_PSQL_DB=traction
VERIFIER_PSQL_USER=verifieruser
VERIFIER_PSQL_PASS=verifierPass


# ------------------------------------------------------------
# Keycloak OIDC Configuration for docker-compose.oidc-security.yaml
# ------------------------------------------------------------

BPA_KEYCLOAK_CLIENT_ID=<OIDC Client Id>
BPA_KEYCLOAK_CLIENT_SECRET=<OIDC Client Secret>
BPA_KEYCLOAK_ISSUER=<OIDC Realm URL>
BPA_KEYCLOAK_REDIRECT_URI=http://localhost:{BPA_PORT}/logout
BPA_KEYCLOAK_ENDSESSION_URL={BPA_KEYCLOAK_ISSUER}/protocol/openid-connect/logout

## ID of Presentation Request to forward to https://github.com/bcgov/vc-authn-oidc Identify Provider
## which is configured in this repo https://github.com/bcgov/a2a-trust-over-ip-configurations/tree/master/proof-configurations

BPA_KEYCLOAK_VCAUTHN_PRES_REQ_CONF_ID=<see comment>